Version 0.0.9 rc1

- open new branch
- update lib jna to 3.4.2
- fix jna Structure field sort (Structure.setFieldOrder(new String[]{..}))


Version 0.0.8

-  Mostly thanks to Alexander Salgado 

* Added support for internally switching to poll() instead of select()

- poll is useful if the operating system uses file descriptors that overflow 'fd_set'
- to use poll() set system property purejavacomm.use_poll = true
- only available for Linux at the moment, for other platforms 
   purejavacomm.use_poll is ignored

* Fixed poll() in jtermios.linux.JTermiosImpl.java

- poll() can now be used instead of select() , which has the benefit of 
  marginally less overhead and support file descriptors that overdflow
  what select() can handle, rare but useful if it happens
  
* Fixed a few wrong constants in jtermios.linux.JTermiosImpl.java

- constant for baudrate 1200 was wrong (resulted in 600)
- some error codes were wrong (probably had no effect)


Version 0.0.7

* On Linux ignore failure of TIOCGSERIAL in when trying to use standard baudrates

- not every serial port driver supports TIOCGSERIAL, so when we set standard baudrate
  we try to turn of custom divisor using TIOCGSERIAL, but if it fails we just ignore it
  
- related to above logging for JTermiosImpl.setspeed() was improved to help debugging

Version 0.0.6

* Added support for FreeBSD

- thanks to the persistent efforts of Denver Hull

* Fixed a synchronization issue with control line state change detection

- this bug often caused failure in Test1.java

* Moved baudrate setting to each individual backend to support non standard baudrates

- setting of non standard baudrates is very specific to OS and thus best
  handled separately for each platform

* Changed the way baudrate setting is handled in Mac OS X 

- the code now first tries the standard (POSIX) way of setting the baudate
  and if that fails then it tries the Mac OS X specific ioctl IOSSIOSPEED
  
* Change port enumeration matching to use a regular expression.

- each backend defines its own rules for matching port names during enumeration,
  see implementation of each jtermios.JTermios.JTermiosInterface.getPortNamePattern().
  
- for each backend the pattern can be overridden by setting the system property
  purejavacomm.portnamepattern.<backend-fully-qualified-classname>.
  
- the pattern can be globally overriden by setting the system property
  purejavacomm.portnamepattern
  
- the current default backend patterns, as returned by getPortNamePattern(),
  are as follows:
  
  OS          Regular expression        Port name...
  -------------------------------------------------------------------
  Linux       ^tty*                     Starts with 'tty'
  Mac OS      ^(tty\.|cu\.).*           Starts with 'cu.' or 'tty.'
  FreeBSD     ^(tty\.|cu\.).*           Starts with 'cu.' or 'tty.'
  Solaris     .*                        Anything goes
  Windows     ^COM.*                    Starts with 'COM'
  
  
  